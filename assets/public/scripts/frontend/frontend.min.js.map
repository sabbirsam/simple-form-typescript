{"version":3,"file":"scripts/frontend/frontend.min.js","mappings":"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","sources":["webpack://simple-form/./assets/src/scripts/frontend.js"],"sourcesContent":["/**\r\n * \r\n * @param {*} formData \r\n * @returns \r\n */\r\n\r\nfunction generateRenderedForm(formData) {\r\n  let html = '';\r\n\r\n  formData.forEach((field) => {\r\n    switch (field.type) {\r\n      case 'text':\r\n      case 'number':\r\n      case 'email':\r\n      case 'hidden':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label for=\"${field.id}\">${field.label}</label>\r\n            <input id=\"${field.id}\" type=\"${field.type}\" name=\"${field.id}\" placeholder=\"${field.placeholder}\" class=\"${field.className}\" value=\"${field.value || ''}\">\r\n          </div>\r\n          <br>\r\n        `;\r\n        break;\r\n\r\n      case 'select':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label for=\"${field.id}\">${field.label}</label>\r\n            <select id=\"${field.id}\" name=\"${field.id}\">`;\r\n        field.options.forEach((option) => {\r\n          html += `\r\n            <option value=\"${option.value}\" ${field.value === option.value ? 'selected' : ''}>${option.label}</option>\r\n          `;\r\n        });\r\n        html += `\r\n            </select>\r\n          </div>\r\n          <br>\r\n        `;\r\n        break;\r\n\r\n      case 'file':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label for=\"${field.id}\">${field.label}</label>\r\n            <input id=\"${field.id}\" type=\"${field.type}\" name=\"${field.id}\" class=\"${field.className}\">\r\n          </div>\r\n          <br>\r\n        `;\r\n        break;\r\n\r\n      case 'checkbox':\r\n        //${field.value.includes(option.value) ? 'checked' : ''}\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label>${field.label}</label>`;\r\n        field.options.forEach((option) => {\r\n          html += `\r\n            <div class=\"text-fields-insider\">\r\n              <input type=\"checkbox\" id=\"${option.value}\" name=\"${field.id}\" value=\"${option.value}\">\r\n              <label for=\"${option.value}\">${option.label}</label>\r\n            </div>`;\r\n        });\r\n        html += `\r\n          </div>`;\r\n        break;\r\n\r\n      case 'radio':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label>${field.label}</label>`;\r\n        field.options.forEach((option) => {\r\n          html += `\r\n            <div class=\"text-fields-insider\">\r\n              <input\r\n                type=\"radio\"\r\n                id=\"${option.value}\"\r\n                name=\"${field.id}\"\r\n                value=\"${option.value}\"\r\n                ${field.value === option.value ? 'checked' : ''}\r\n              />\r\n              <label for=\"${option.value}\">${option.label}</label>\r\n            </div>`;\r\n        });\r\n        html += `\r\n          </div>`;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  return html;\r\n}\r\n\r\n\r\n/**\r\n * Load Form \r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    var formContainers = document.querySelectorAll('.simple_form_container');\r\n  \r\n    formContainers.forEach(function (container) {\r\n      var formId = container.getAttribute('data-form-id');\r\n      var nonce = container.getAttribute('data-nonce');\r\n      // Get the unique markup identifier associated with this shortcode\r\n      var markupId = container.querySelector('.simple_form_loader').id;\r\n  \r\n      fetch(front_end_data.admin_ajax + '?action=simpleform_table_html&nonce=' + nonce + '&id=' + formId)\r\n        .then(function (response) {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(function (data) {\r\n          const code = document.getElementById(markupId);\r\n          const formData = data.data.table_settings;\r\n          const renderedFormHTML = generateRenderedForm(formData);\r\n          code.innerHTML = renderedFormHTML;\r\n        })\r\n        .catch(function (error) {\r\n          // Handle the error for this form\r\n          console.error('Form', formId, 'Error:', error);\r\n        });\r\n    });\r\n  });\r\n  \r\n\r\n\r\n/**\r\n * Submit Form\r\n */\r\n\r\nwindow.addEventListener('load', function () {\r\n  var formContainers = document.querySelectorAll('.simple_form_container');\r\n\r\n  formContainers.forEach(function (formContainer) {\r\n    var formId = formContainer.dataset.formId;\r\n    var nonce = formContainer.dataset.nonce;\r\n\r\n    // Find the submit button within the current form container\r\n    var submitButton = formContainer.querySelector('.submit-button');\r\n\r\n    submitButton.addEventListener('click', function (event) {\r\n      \r\n      // Prevent the default form submission behavior\r\n      event.preventDefault();\r\n\r\n      // Serialize the form data\r\n      var formData = new FormData(formContainer.querySelector('.simple_form'));\r\n\r\n      // Check if form data is empty\r\n      if (formData.entries().next().done) {\r\n        alert(\"Form data is empty. Please fill out the form.\");\r\n        return; // Don't proceed with the AJAX request\r\n      }\r\n\r\n      // Create an AJAX request for the form submission\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('POST', front_end_data.admin_ajax, true);\r\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n      var formDataArray = Array.from(formData.entries()); // Used to send in Ajax\r\n      var formDataObject = Object.fromEntries(formDataArray); \r\n\r\n      var data = \"action=simpleform_get_submit_data\" + \"&nonce=\" + encodeURIComponent(nonce) + \"&id=\" + encodeURIComponent(formId) + \"&form_data=\" + JSON.stringify(formDataObject);\r\n\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n          if (xhr.status === 200) {\r\n            var responseData = JSON.parse(xhr.responseText);\r\n\r\n            console.log('Response:', responseData);\r\n            if (responseData.success) {\r\n              // Clear the form fields\r\n              var form = formContainer.querySelector('.simple_form');\r\n              form.reset();\r\n              \r\n              // Show a success message using SweetAlert\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: responseData.message,\r\n              });\r\n            }\r\n\r\n          } else {\r\n            // Handle the error for this form\r\n            console.error('Form', formId, 'Error:', xhr.statusText);\r\n          }\r\n        }\r\n      };\r\n\r\n      xhr.send(data);\r\n    });\r\n  });\r\n});"],"names":["document","addEventListener","querySelectorAll","forEach","container","formId","getAttribute","nonce","markupId","querySelector","id","fetch","front_end_data","admin_ajax","then","response","ok","Error","json","data","formData","html","code","getElementById","renderedFormHTML","table_settings","field","type","concat","label","placeholder","className","value","options","option","innerHTML","error","console","window","formContainer","dataset","event","preventDefault","FormData","entries","next","done","alert","xhr","XMLHttpRequest","open","setRequestHeader","formDataArray","Array","from","formDataObject","Object","fromEntries","encodeURIComponent","JSON","stringify","onreadystatechange","readyState","status","responseData","parse","responseText","log","success","reset","Swal","fire","icon","title","text","message","statusText","send"],"sourceRoot":""}