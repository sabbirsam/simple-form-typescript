{"version":3,"file":"scripts/frontend/frontend.min.js","mappings":"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","sources":["webpack://simple-form/./assets/src/scripts/frontend.js"],"sourcesContent":["\r\n// Function to generate HTML for the rendered form\r\n/**\r\n * Load Form \r\n */\r\njQuery(window).on('load', function () {\r\n    var formContainers = jQuery('.simple_form_container');\r\n  \r\n    formContainers.each(function () {\r\n        var formId = jQuery(this).data('form-id');\r\n        var nonce = jQuery(this).data('nonce');\r\n        \r\n        // Get the unique markup identifier associated with this shortcode\r\n        var markupId = jQuery(this).find(\".simple_form_loader\").attr(\"id\");\r\n  \r\n        jQuery.ajax({\r\n            url: front_end_data.admin_ajax,\r\n            method: 'GET',\r\n            data: {\r\n                action: 'simpleform_table_html',\r\n                nonce: nonce,\r\n                id: formId\r\n            },\r\n            success: function (response) {\r\n                // Use the specific markup element for this shortcode\r\n                const code = jQuery(\"#\" + markupId)[0];\r\n                const formData = response.data.table_settings;\r\n                const addLineBreaks = html => html.replace(new RegExp(\"><\", \"g\"), \">\\n<\");\r\n  \r\n                // Grab markup and escape it\r\n                const $markup = jQuery(\"<div/>\");\r\n                $markup.formRender({ formData });\r\n  \r\n                // Set the inner HTML with escaped markup\r\n                code.innerHTML = addLineBreaks($markup.formRender(\"html\"));\r\n            },\r\n            error: function (error) {\r\n                // Handle the error for this form\r\n                console.error('Form', formId, 'Error:', error);\r\n            }\r\n        });\r\n    });\r\n  });\r\n  \r\n  \r\n  /**\r\n   * Submit Form nice one\r\n   */\r\n  \r\n  jQuery(window).on('load', function () {\r\n    var formContainers = jQuery('.simple_form_container');\r\n  \r\n    formContainers.each(function () {\r\n        var formContainer = jQuery(this);\r\n        var formId = formContainer.data('form-id');\r\n        var nonce = formContainer.data('nonce');\r\n  \r\n        // Get the unique markup identifier associated with this shortcode\r\n        var markupId = formContainer.find(\".simple_form_loader\").attr(\"id\");\r\n  \r\n        // Find the submit button within the current form container\r\n        var submitButton = formContainer.find('.submit-button');\r\n  \r\n        submitButton.on('click', function (event) {\r\n            // Prevent the default form submission behavior\r\n            event.preventDefault();\r\n  \r\n            // Serialize the form data\r\n            var formData = formContainer.find('.simple_form').serialize();\r\n  \r\n            // Check if form data is empty\r\n            if (formData === \"\") {\r\n                alert(\"Form data is empty. Please fill out the form.\");\r\n                return; // Don't proceed with the AJAX request\r\n            }\r\n  \r\n            // Create an AJAX request for the form submission\r\n            jQuery.ajax({\r\n                url: front_end_data.admin_ajax,\r\n                method: 'POST', // Change to POST for form submission\r\n                data: {\r\n                    action: 'simpleform_get_submit_data', // Adjust the action accordingly\r\n                    nonce: nonce,\r\n                    id: formId,\r\n                    form_data: formData, // Include the serialized form data\r\n                },\r\n                success: function (response) {\r\n                    var responseData = response.data;\r\n  \r\n                    // Split the form data into key-value pairs\r\n                    var formDataArray = formData.split('&');\r\n                    var formDataObject = {};\r\n  \r\n                    formDataArray.forEach(function (item) {\r\n                        var pair = item.split('=');\r\n                        var key = decodeURIComponent(pair[0]);\r\n                        var value = decodeURIComponent(pair[1]);\r\n                        formDataObject[key] = value;\r\n                    });\r\n  \r\n                    console.log('Formatted Form Data:', formDataObject);\r\n  \r\n                    // Handle the response data as needed\r\n                },\r\n                error: function (error) {\r\n                    // Handle the error for this form\r\n                    console.error('Form', formId, 'Error:', error);\r\n                }\r\n            });\r\n        });\r\n    });\r\n  });\r\n\r\n\r\n//   Custom render for my form builder ------------------------\r\n\r\n  document.addEventListener('DOMContentLoaded', function () {\r\n    function generateRenderedForm(formData) {\r\n        let html = '<h2>Rendered Form</h2>';\r\n      \r\n        formData.forEach((field) => {\r\n          switch (field.type) {\r\n            case 'text':\r\n            case 'number':\r\n            case 'email':\r\n            case 'hidden':\r\n              html += `\r\n                <div>\r\n                  <label>${field.label}</label>\r\n                  <input type=\"${field.type}\" placeholder=\"${field.placeholder}\" class=\"${field.className}\">\r\n                </div>\r\n              `;\r\n              break;\r\n      \r\n            case 'select':\r\n              html += `\r\n                <div>\r\n                  <label>${field.label}</label>\r\n                  <select>`;\r\n              field.options.forEach((option) => {\r\n                html += `\r\n                  <option value=\"${option.value}\">${option.label}</option>\r\n                `;\r\n              });\r\n              html += `\r\n                  </select>\r\n                </div>\r\n              `;\r\n              break;\r\n      \r\n            case 'file':\r\n              html += `\r\n                <div>\r\n                  <label>${field.label}</label>\r\n                  <input type=\"file\">\r\n                </div>\r\n              `;\r\n              break;\r\n      \r\n            case 'checkbox':\r\n              if (field.toggle) {\r\n                html += `\r\n                  <div>`;\r\n                field.options.forEach((option) => {\r\n                  html += `\r\n                    <label class=\"switch-label\">${option.label}\r\n                      <input type=\"checkbox\" id=\"${option.value}\" name=\"${field.id}\" value=\"${option.value}\">\r\n                      <span class=\"slider round\"></span>\r\n                    </label>`;\r\n                });\r\n                html += `\r\n                  </div>`;\r\n              } else {\r\n                html += `\r\n                  <div>`;\r\n                field.options.forEach((option) => {\r\n                  html += `\r\n                    <div>\r\n                      <input type=\"checkbox\" id=\"${option.value}\" name=\"${field.id}\" value=\"${option.value}\">\r\n                      <label for=\"${option.value}\">${option.label}</label>\r\n                    </div>`;\r\n                });\r\n                html += `\r\n                  </div>`;\r\n              }\r\n              break;\r\n      \r\n            case 'radio':\r\n              html += `\r\n                <div>\r\n                  <label>${field.label}</label>`;\r\n              field.options.forEach((option) => {\r\n                html += `\r\n                  <div>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"${option.value}\"\r\n                      name=\"${field.id}\"\r\n                      value=\"${option.value}\"\r\n                    />\r\n                    <label for=\"${option.value}\">${option.label}</label>\r\n                  </div>`;\r\n              });\r\n              html += `\r\n                </div>`;\r\n              break;\r\n      \r\n            default:\r\n              break;\r\n          }\r\n        });\r\n      \r\n        return html;\r\n      }\r\n      \r\n      const formData = [\r\n        {\r\n          id: 'text-input',\r\n          label: 'Text Input',\r\n          type: 'text',\r\n          placeholder: 'Enter text...',\r\n          className: 'custom-input',\r\n          uniqueId: 'field-1',\r\n        },\r\n        {\r\n          id: 'select-input',\r\n          label: 'Select',\r\n          type: 'select',\r\n          options: [\r\n            { label: 'Option 1', value: 'Option 1' },\r\n            { label: 'Option 2', value: 'Option 2' },\r\n          ],\r\n          uniqueId: 'field-2',\r\n        },\r\n        {\r\n          id: 'file-input',\r\n          label: 'File Upload',\r\n          type: 'file',\r\n          uniqueId: 'field-3',\r\n        },\r\n        {\r\n          id: 'checkbox-input',\r\n          label: 'Checkbox',\r\n          type: 'checkbox',\r\n          toggle: true, \r\n          options: [\r\n            { label: 'Option 1', value: 'Option 1' },\r\n            { label: 'Option 2', value: 'Option 2' },\r\n          ],\r\n          uniqueId: 'field-4',\r\n        },\r\n        {\r\n          id: 'radio-input',\r\n          label: 'Radio',\r\n          type: 'radio',\r\n          options: [\r\n            { label: 'Option A', value: 'Option A' },\r\n            { label: 'Option B', value: 'Option B' },\r\n          ],\r\n          uniqueId: 'field-5',\r\n        },\r\n      ];\r\n\r\n\r\n        // Generate the rendered form HTML\r\n        const renderedFormHTML = generateRenderedForm(formData);\r\n        \r\n        // Output the HTML to the console (you can use it as needed)\r\n        console.log(renderedFormHTML);\r\n\r\n\r\n        //   Render \r\n        const formContainer = document.getElementById('test123');\r\n        formContainer.innerHTML = renderedFormHTML;\r\n\r\n  });  "],"names":["jQuery","window","on","formContainers","each","formId","data","nonce","markupId","find","attr","ajax","url","front_end_data","admin_ajax","method","action","id","success","response","code","formData","table_settings","addLineBreaks","html","replace","RegExp","$markup","formRender","innerHTML","error","console","formContainer","submitButton","event","preventDefault","serialize","alert","form_data","responseData","formDataArray","split","formDataObject","forEach","item","pair","key","decodeURIComponent","value","log","document","addEventListener","generateRenderedForm","field","type","concat","label","placeholder","className","options","option","toggle","uniqueId","renderedFormHTML","getElementById"],"sourceRoot":""}