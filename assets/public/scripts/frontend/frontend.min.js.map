{"version":3,"file":"scripts/frontend/frontend.min.js","mappings":"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","sources":["webpack://simple-form/./assets/src/scripts/frontend.js"],"sourcesContent":["/**\r\n * \r\n * @param {*} formData \r\n * @returns \r\n */\r\n\r\nfunction generateRenderedForm(formData) {\r\n  \r\n\r\n  let html = '';\r\n\r\n  formData.forEach((field) => {\r\n    let fieldAttributes = '';\r\n\r\n    if (field.required === 'true') {\r\n      fieldAttributes += ' required';\r\n    }\r\n\r\n    switch (field.type) {\r\n      case 'text':\r\n      case 'number':\r\n      case 'email':\r\n      case 'hidden':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label for=\"${field.id}\">${field.label}</label>\r\n            <input id=\"${field.id}\" type=\"${field.type}\" name=\"${field.name}\" placeholder=\"${field.placeholder}\" class=\"${field.className}\" value=\"${field.value || ''}\"${fieldAttributes}>\r\n          </div>\r\n          <br>\r\n        `;\r\n        break;\r\n\r\n      case 'select':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label for=\"${field.id}\">${field.label}</label>\r\n            <select id=\"${field.id}\" name=\"${field.name}\"${fieldAttributes}>`;\r\n        field.options.forEach((option) => {\r\n          html += `\r\n            <option value=\"${option.value}\" ${field.value === option.value ? 'selected' : ''}>${option.label}</option>\r\n          `;\r\n        });\r\n        html += `\r\n            </select>\r\n          </div>\r\n          <br>\r\n        `;\r\n        break;\r\n\r\n      case 'file':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label for=\"${field.id}\">${field.label}</label>\r\n            <input id=\"${field.id}\" type=\"${field.type}\" name=\"${field.name}\" class=\"${field.className}\"${fieldAttributes}>\r\n          </div>\r\n          <br>\r\n        `;\r\n        break;\r\n\r\n      case 'checkbox':\r\n        if (field.toggle === 'true') {\r\n          // Render the toggle checkbox\r\n          html += `\r\n            <div class=\"simple-form-checkbox-toggle\">\r\n              <label class=\"switch-label\">${field.label}\r\n                <input type=\"checkbox\" id=\"${field.id}\" name=\"${field.name}\" class=\"switch-input ${field.className}\"${fieldAttributes}>\r\n                <span class=\"slider round\"></span>\r\n              </label>\r\n            </div>`;\r\n        } else {\r\n          // Render the default checkboxes\r\n          html += `\r\n          <div class=\"text-fields\">\r\n            <label>${field.label}</label>`;\r\n          field.options.forEach((option) => {\r\n            html += `\r\n              <div class=\"text-fields-insider\">\r\n                <input type=\"checkbox\" id=\"${option.value}\" name=\"${field.name}\" value=\"${option.value}\"${fieldAttributes}>\r\n                <label for=\"${option.value}\">${option.label}</label>\r\n              </div>`;\r\n          });\r\n          html += `\r\n            </div>`;\r\n        }\r\n        break;\r\n    \r\n      case 'radio':\r\n        html += `\r\n          <div class=\"text-fields\">\r\n            <label>${field.label}</label>`;\r\n        field.options.forEach((option) => {\r\n          html += `\r\n            <div class=\"text-fields-insider\">\r\n              <input\r\n                type=\"radio\"\r\n                id=\"${option.value}\"\r\n                name=\"${field.name}\"\r\n                value=\"${option.value}\"\r\n                ${field.value === option.value ? 'checked' : ''}\r\n                ${fieldAttributes}\r\n              />\r\n              <label for=\"${option.value}\">${option.label}</label>\r\n            </div>`;\r\n        });\r\n        html += `\r\n          </div>`;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  return html;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Load Form \r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    var formContainers = document.querySelectorAll('.simple_form_container');\r\n  \r\n    formContainers.forEach(function (container) {\r\n      var formId = container.getAttribute('data-form-id');\r\n      var nonce = container.getAttribute('data-nonce');\r\n      // Get the unique markup identifier associated with this shortcode\r\n      var markupId = container.querySelector('.simple_form_loader').id;\r\n  \r\n      fetch(front_end_data.admin_ajax + '?action=simpleform_table_html&nonce=' + nonce + '&id=' + formId)\r\n        .then(function (response) {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(function (data) {\r\n          const code = document.getElementById(markupId);\r\n          const formData = data.data.table_settings;\r\n          const renderedFormHTML = generateRenderedForm(formData);\r\n          code.innerHTML = renderedFormHTML;\r\n        })\r\n        .catch(function (error) {\r\n          // Handle the error for this form\r\n          console.error('Form', formId, 'Error:', error);\r\n        });\r\n    });\r\n  });\r\n  \r\n\r\n\r\n/**\r\n * Submit Form\r\n */\r\n\r\nwindow.addEventListener('load', function () {\r\n  var formContainers = document.querySelectorAll('.simple_form_container');\r\n\r\n  formContainers.forEach(function (formContainer) {\r\n    var formId = formContainer.dataset.formId;\r\n    var nonce = formContainer.dataset.nonce;\r\n\r\n    // Find the submit button within the current form container\r\n    var submitButton = formContainer.querySelector('.submit-button');\r\n\r\n    submitButton.addEventListener('click', function (event) {\r\n\r\n      // Prevent the default form submission behavior\r\n      event.preventDefault();\r\n\r\n      // Get all form elements within the form\r\n      var formElements = formContainer.querySelectorAll('input, select, textarea');\r\n\r\n      // Create an object to store the form data\r\n      var formDataObject = {};\r\n\r\n      // Create a flag to track if there are any required fields that are empty\r\n      var hasEmptyRequiredFields = false;\r\n\r\n      formElements.forEach(function (element) {\r\n        // Check if the element has the \"simple-form-checkbox-toggle\" class\r\n        var isToggleCheckbox = element.closest('.simple-form-checkbox-toggle') !== null;\r\n\r\n        // Handle checkboxes with the \"simple-form-checkbox-toggle\" class\r\n        if (isToggleCheckbox && element.type === 'checkbox') {\r\n          formDataObject[element.name] = element.checked ? 'on' : 'off';\r\n        } else {\r\n          formDataObject[element.name] = element.value;\r\n        }\r\n\r\n        // Check if the field is required and empty\r\n        if (element.hasAttribute('required') && formDataObject[element.name].trim() === '') {\r\n          // Add a red border to indicate the required field is empty\r\n          element.style.border = '1px solid red';\r\n          hasEmptyRequiredFields = true;\r\n        } else {\r\n          // Remove any red border if the field is not empty\r\n          element.style.border = '';\r\n        }\r\n      });\r\n\r\n      // If there are empty required fields, prevent form submission\r\n      if (hasEmptyRequiredFields) {\r\n        alert('Please fill out all required fields.');\r\n        return;\r\n      }\r\n\r\n      // Add the nonce and formId to the formDataObject\r\n      // formDataObject['nonce'] = nonce;\r\n      formDataObject['id'] = formId;\r\n\r\n      // Create an AJAX request for the form submission\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('POST', front_end_data.admin_ajax, true);\r\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n      var data = \"action=simpleform_get_submit_data\" + \"&nonce=\" + encodeURIComponent(nonce) + \"&id=\" + encodeURIComponent(formId) + \"&form_data=\" + JSON.stringify(formDataObject);\r\n\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n          if (xhr.status === 200) {\r\n            var responseData = JSON.parse(xhr.responseText);\r\n\r\n            console.log('Response:', responseData);\r\n            if (responseData.success) {\r\n              // Clear the form fields\r\n              var form = formContainer.querySelector('.simple_form');\r\n              form.reset();\r\n\r\n              // Show a success message using SweetAlert\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: responseData.message,\r\n              });\r\n            }\r\n\r\n          } else {\r\n            // Handle the error for this form\r\n            console.error('Form', formId, 'Error:', xhr.statusText);\r\n          }\r\n        }\r\n      };\r\n\r\n      xhr.send(data);\r\n    });\r\n  });\r\n});"],"names":["generateRenderedForm","formData","html","forEach","field","fieldAttributes","required","type","concat","id","label","name","placeholder","className","value","options","option","toggle","document","addEventListener","formContainers","querySelectorAll","container","formId","getAttribute","nonce","markupId","querySelector","fetch","front_end_data","admin_ajax","then","response","ok","Error","json","data","code","getElementById","table_settings","renderedFormHTML","innerHTML","error","console","window","formContainer","dataset","submitButton","event","preventDefault","formElements","formDataObject","hasEmptyRequiredFields","element","isToggleCheckbox","closest","checked","hasAttribute","trim","style","border","alert","xhr","XMLHttpRequest","open","setRequestHeader","encodeURIComponent","JSON","stringify","onreadystatechange","readyState","status","responseData","parse","responseText","log","success","form","reset","Swal","fire","icon","title","text","message","statusText","send"],"sourceRoot":""}