/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!****************************************!*\
  !*** ./assets/src/scripts/frontend.js ***!
  \****************************************/
// Function to generate HTML for the rendered form
/**
 * Load Form 
 */
jQuery(window).on('load', function () {
  var formContainers = jQuery('.simple_form_container');
  formContainers.each(function () {
    var formId = jQuery(this).data('form-id');
    var nonce = jQuery(this).data('nonce');

    // Get the unique markup identifier associated with this shortcode
    var markupId = jQuery(this).find(".simple_form_loader").attr("id");
    jQuery.ajax({
      url: front_end_data.admin_ajax,
      method: 'GET',
      data: {
        action: 'simpleform_table_html',
        nonce: nonce,
        id: formId
      },
      success: function success(response) {
        // Use the specific markup element for this shortcode
        var code = jQuery("#" + markupId)[0];
        var formData = response.data.table_settings;
        var addLineBreaks = function addLineBreaks(html) {
          return html.replace(new RegExp("><", "g"), ">\n<");
        };

        // Grab markup and escape it
        var $markup = jQuery("<div/>");
        $markup.formRender({
          formData: formData
        });

        // Set the inner HTML with escaped markup
        code.innerHTML = addLineBreaks($markup.formRender("html"));
      },
      error: function error(_error) {
        // Handle the error for this form
        console.error('Form', formId, 'Error:', _error);
      }
    });
  });
});

/**
 * Submit Form nice one
 */

jQuery(window).on('load', function () {
  var formContainers = jQuery('.simple_form_container');
  formContainers.each(function () {
    var formContainer = jQuery(this);
    var formId = formContainer.data('form-id');
    var nonce = formContainer.data('nonce');

    // Get the unique markup identifier associated with this shortcode
    var markupId = formContainer.find(".simple_form_loader").attr("id");

    // Find the submit button within the current form container
    var submitButton = formContainer.find('.submit-button');
    submitButton.on('click', function (event) {
      // Prevent the default form submission behavior
      event.preventDefault();

      // Serialize the form data
      var formData = formContainer.find('.simple_form').serialize();

      // Check if form data is empty
      if (formData === "") {
        alert("Form data is empty. Please fill out the form.");
        return; // Don't proceed with the AJAX request
      }

      // Create an AJAX request for the form submission
      jQuery.ajax({
        url: front_end_data.admin_ajax,
        method: 'POST',
        // Change to POST for form submission
        data: {
          action: 'simpleform_get_submit_data',
          // Adjust the action accordingly
          nonce: nonce,
          id: formId,
          form_data: formData // Include the serialized form data
        },

        success: function success(response) {
          var responseData = response.data;

          // Split the form data into key-value pairs
          var formDataArray = formData.split('&');
          var formDataObject = {};
          formDataArray.forEach(function (item) {
            var pair = item.split('=');
            var key = decodeURIComponent(pair[0]);
            var value = decodeURIComponent(pair[1]);
            formDataObject[key] = value;
          });
          console.log('Formatted Form Data:', formDataObject);

          // Handle the response data as needed
        },

        error: function error(_error2) {
          // Handle the error for this form
          console.error('Form', formId, 'Error:', _error2);
        }
      });
    });
  });
});

//   Custom render for my form builder ------------------------

document.addEventListener('DOMContentLoaded', function () {
  function generateRenderedForm(formData) {
    var html = '<h2>Rendered Form</h2>';
    formData.forEach(function (field) {
      switch (field.type) {
        case 'text':
        case 'number':
        case 'email':
        case 'hidden':
          html += "\n                <div>\n                  <label>".concat(field.label, "</label>\n                  <input type=\"").concat(field.type, "\" placeholder=\"").concat(field.placeholder, "\" class=\"").concat(field.className, "\">\n                </div>\n              ");
          break;
        case 'select':
          html += "\n                <div>\n                  <label>".concat(field.label, "</label>\n                  <select>");
          field.options.forEach(function (option) {
            html += "\n                  <option value=\"".concat(option.value, "\">").concat(option.label, "</option>\n                ");
          });
          html += "\n                  </select>\n                </div>\n              ";
          break;
        case 'file':
          html += "\n                <div>\n                  <label>".concat(field.label, "</label>\n                  <input type=\"file\">\n                </div>\n              ");
          break;
        case 'checkbox':
          if (field.toggle) {
            html += "\n                  <div>";
            field.options.forEach(function (option) {
              html += "\n                    <label class=\"switch-label\">".concat(option.label, "\n                      <input type=\"checkbox\" id=\"").concat(option.value, "\" name=\"").concat(field.id, "\" value=\"").concat(option.value, "\">\n                      <span class=\"slider round\"></span>\n                    </label>");
            });
            html += "\n                  </div>";
          } else {
            html += "\n                  <div>";
            field.options.forEach(function (option) {
              html += "\n                    <div>\n                      <input type=\"checkbox\" id=\"".concat(option.value, "\" name=\"").concat(field.id, "\" value=\"").concat(option.value, "\">\n                      <label for=\"").concat(option.value, "\">").concat(option.label, "</label>\n                    </div>");
            });
            html += "\n                  </div>";
          }
          break;
        case 'radio':
          html += "\n                <div>\n                  <label>".concat(field.label, "</label>");
          field.options.forEach(function (option) {
            html += "\n                  <div>\n                    <input\n                      type=\"radio\"\n                      id=\"".concat(option.value, "\"\n                      name=\"").concat(field.id, "\"\n                      value=\"").concat(option.value, "\"\n                    />\n                    <label for=\"").concat(option.value, "\">").concat(option.label, "</label>\n                  </div>");
          });
          html += "\n                </div>";
          break;
        default:
          break;
      }
    });
    return html;
  }
  var formData = [{
    id: 'text-input',
    label: 'Text Input',
    type: 'text',
    placeholder: 'Enter text...',
    className: 'custom-input',
    uniqueId: 'field-1'
  }, {
    id: 'select-input',
    label: 'Select',
    type: 'select',
    options: [{
      label: 'Option 1',
      value: 'Option 1'
    }, {
      label: 'Option 2',
      value: 'Option 2'
    }],
    uniqueId: 'field-2'
  }, {
    id: 'file-input',
    label: 'File Upload',
    type: 'file',
    uniqueId: 'field-3'
  }, {
    id: 'checkbox-input',
    label: 'Checkbox',
    type: 'checkbox',
    toggle: true,
    options: [{
      label: 'Option 1',
      value: 'Option 1'
    }, {
      label: 'Option 2',
      value: 'Option 2'
    }],
    uniqueId: 'field-4'
  }, {
    id: 'radio-input',
    label: 'Radio',
    type: 'radio',
    options: [{
      label: 'Option A',
      value: 'Option A'
    }, {
      label: 'Option B',
      value: 'Option B'
    }],
    uniqueId: 'field-5'
  }];

  // Generate the rendered form HTML
  var renderedFormHTML = generateRenderedForm(formData);

  // Output the HTML to the console (you can use it as needed)
  console.log(renderedFormHTML);

  //   Render 
  var formContainer = document.getElementById('test123');
  formContainer.innerHTML = renderedFormHTML;
});
/******/ })()
;
//# sourceMappingURL=frontend.min.js.map